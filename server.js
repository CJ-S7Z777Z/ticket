
// server.js
require('dotenv').config();
const express = require('express');
const multer = require('multer');
const TelegramBot = require('node-telegram-bot-api');
const path = require('path');
const fs = require('fs');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Express
const app = express();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞
const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN, { polling: false });
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

// –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ uploads, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
const uploadDir = path.join(__dirname, 'uploads');
if (!fs.existsSync(uploadDir)){
    fs.mkdirSync(uploadDir);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Multer –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
const storage = multer.diskStorage({
    destination: function (req, file, cb) {
        cb(null, 'uploads/');
    },
    filename: function (req, file, cb) {
        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);
        const sanitizedFilename = file.originalname.replace(/[^a-zA-Z0-9.\-_]/g, '');
        cb(null, uniqueSuffix + '-' + sanitizedFilename);
    }
});
const upload = multer({ 
    storage: storage,
    limits: { fileSize: 20 * 1024 * 1024 }, // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: 20MB
});

// Middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ JSON –∏ URL-encoded –¥–∞–Ω–Ω—ã—Ö
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// –°—Ç–∞—Ç–∏–∫–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º —Ñ–∞–π–ª–∞–º
app.use('/uploads', express.static(path.join(__dirname, 'uploads')));

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ä–º—ã
app.post('/submit', upload.array('files[]', 10), async (req, res) => {
    try {
        const data = req.body;
        const files = req.files;

        // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
        console.log('–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', data);
        console.log('–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:', files);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
        if (!data.–ò–º—è || !data.–¢–µ–ª–µ—Ñ–æ–Ω || !data['–í–∏–¥ –ø—Ä–æ–¥—É–∫—Ü–∏–∏'] || !data.–®–∏—Ä–∏–Ω–∞ || !data.–í—ã—Å–æ—Ç–∞ || !data.–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ) {
            return res.status(400).send('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è.');
        }

        // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        let message = `üìÑ *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞*:\n\n`;
        message += `*–ò–º—è:* ${data.–ò–º—è || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n`;
        message += `*–¢–µ–ª–µ—Ñ–æ–Ω:* ${data.–¢–µ–ª–µ—Ñ–æ–Ω || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n`;
        if (data['E-mail']) {
            message += `*–ü–æ—á—Ç–∞:* ${data['E-mail']}\n`;
        }
        if (data.–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π) {
            message += `*–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* ${data.–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π}\n`;
        }
        if (data['–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —Å —Ü–µ–Ω–æ–π']) {
            message += `*–ò—Ç–æ–≥–æ:* ${data['–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —Å —Ü–µ–Ω–æ–π']}\n`;
        }

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
        message += `\n*–í–∏–¥ –ø—Ä–æ–¥—É–∫—Ü–∏–∏:* ${data['–í–∏–¥ –ø—Ä–æ–¥—É–∫—Ü–∏–∏'] || '–ù–µ –≤—ã–±—Ä–∞–Ω'}\n`;
        message += `*–†–∞–∑–º–µ—Ä:* ${data['–®–∏—Ä–∏–Ω–∞']} x ${data['–í—ã—Å–æ—Ç–∞']} –º–º\n`;
        if (data.–ú–∞—Ç–µ—Ä–∏–∞–ª) {
            message += `*–ú–∞—Ç–µ—Ä–∏–∞–ª:* ${data.–ú–∞—Ç–µ—Ä–∏–∞–ª}\n`;
        }
        message += `*–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:* ${data.–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ}\n`;

        if (data['–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª—é–≤–µ—Ä—Å–æ–≤'] === 'on') {
            message += `*–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª—é–≤–µ—Ä—Å–æ–≤:* –î–∞\n`;
            message += `*–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–≤–µ—Ä—Å–æ–≤:* ${data['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–≤–µ—Ä—Å–æ–≤'] || 0}\n`;
        } else {
            message += `*–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª—é–≤–µ—Ä—Å–æ–≤:* –ù–µ—Ç\n`;
        }

        if (data['–î–ª—è —Å—Ç–µ–Ω–¥–æ–≤'] === 'on') {
            message += `*–î–ª—è —Å—Ç–µ–Ω–¥–æ–≤:* –î–∞\n`;
            // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ stands_details –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∫–∞–∫ JSON –∏–ª–∏ —Å—Ç—Ä–æ–∫–∞. –ù—É–∂–Ω–æ —É—Ç–æ—á–Ω–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç.
            if (data.stands_details) {
                try {
                    const standsDetails = JSON.parse(data.stands_details);
                    message += `*–î–µ—Ç–∞–ª–∏ —Å—Ç–µ–Ω–¥–æ–≤:*\n`;
                    for (const [key, value] of Object.entries(standsDetails)) {
                        message += ` - ${key}: ${value}\n`;
                    }
                } catch (err) {
                    // –ï—Å–ª–∏ –Ω–µ JSON, –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–µ—Å—Ç–∏ –∫–∞–∫ –µ—Å—Ç—å
                    message += `*–î–µ—Ç–∞–ª–∏ —Å—Ç–µ–Ω–¥–æ–≤:* ${data.stands_details}\n`;
                }
            }
        } else {
            message += `*–î–ª—è —Å—Ç–µ–Ω–¥–æ–≤:* –ù–µ—Ç\n`;
        }

        if (data.–û–±—Ä–∞–º–ª–µ–Ω–∏–µ === 'on') {
            message += `*–û–±—Ä–∞–º–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–º:* –î–∞\n`;
            if (data['–¶–≤–µ—Ç –æ–±—Ä–∞–º–ª–µ–Ω–∏—è']) {
                message += `*–¶–≤–µ—Ç –æ–±—Ä–∞–º–ª–µ–Ω–∏—è:* ${data['–¶–≤–µ—Ç –æ–±—Ä–∞–º–ª–µ–Ω–∏—è']}\n`;
            }
        } else {
            message += `*–û–±—Ä–∞–º–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–º:* –ù–µ—Ç\n`;
        }

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–∞—Ö
        if (files && files.length > 0) {
            message += `\nüìé *–§–∞–π–ª—ã:*\n`;
            files.forEach((file, index) => {
                const fileUrl = `${req.protocol}://${req.get('host')}/${file.path}`;
                message += `${index + 1}. [${file.originalname}](${fileUrl})\n`;
            });
        }

        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
        await bot.sendMessage(TELEGRAM_CHAT_ID, message, { parse_mode: 'Markdown' });

        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ Telegram –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç—ã
        if (files && files.length > 0) {
            for (const file of files) {
                await bot.sendDocument(TELEGRAM_CHAT_ID, fs.createReadStream(file.path), {}, { filename: file.originalname });
                // –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, —É–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª—ã)
                fs.unlink(file.path, (err) => {
                    if (err) console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ ${file.path}:`, err);
                });
            }
        }

        res.status(200).send('–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏:', error);
        res.status(500).send('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏.');
    }
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
